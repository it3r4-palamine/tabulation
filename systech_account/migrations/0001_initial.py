# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2017-12-18 05:09
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('fullname', models.CharField(blank=True, max_length=100, null=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=1)),
                ('is_edit', models.BooleanField(default=False)),
                ('is_intelex', models.BooleanField(default=False)),
                ('user_intelex_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'User',
            },
        ),
        migrations.CreateModel(
            name='Assessment_answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(verbose_name=b'Choice'), blank=True, null=True, size=None)),
                ('text_answer', models.CharField(blank=True, max_length=200, null=True)),
                ('document_image', models.ImageField(blank=True, null=True, upload_to=b'assessment/document_images/')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('is_deleted', models.BooleanField(default=0)),
            ],
            options={
                'db_table': 'assessment_answers',
            },
        ),
        migrations.CreateModel(
            name='Assessment_effect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=200, null=True)),
                ('is_active', models.BooleanField(default=1)),
                ('is_import', models.BooleanField(default=0)),
            ],
            options={
                'db_table': 'assessment_effects',
            },
        ),
        migrations.CreateModel(
            name='Assessment_finding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=200, null=True)),
                ('is_active', models.BooleanField(default=1)),
                ('is_import', models.BooleanField(default=0)),
            ],
            options={
                'db_table': 'assessment_findings',
            },
        ),
        migrations.CreateModel(
            name='Assessment_question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=200, null=True)),
                ('is_active', models.BooleanField(default=1)),
                ('is_multiple', models.BooleanField(default=0)),
                ('is_document', models.BooleanField(default=0)),
                ('has_follow_up', models.BooleanField(default=0)),
                ('code', models.CharField(blank=True, max_length=200, null=True)),
                ('is_import', models.BooleanField(default=0)),
                ('has_multiple_answer', models.BooleanField(default=0)),
                ('is_general', models.BooleanField(default=0)),
                ('transaction_types', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(verbose_name=b'Transaction_type'), blank=True, null=True, size=None)),
                ('answer_type', models.CharField(blank=True, max_length=200, null=True)),
                ('has_related', models.BooleanField(default=0)),
            ],
            options={
                'db_table': 'assessment_questions',
            },
        ),
        migrations.CreateModel(
            name='Assessment_recommendation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=200, null=True)),
                ('is_active', models.BooleanField(default=1)),
                ('is_import', models.BooleanField(default=0)),
            ],
            options={
                'db_table': 'assessment_recommendations',
            },
        ),
        migrations.CreateModel(
            name='Assessment_score',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=1)),
                ('score', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'assessment_scores',
            },
        ),
        migrations.CreateModel(
            name='Assessment_session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('time_start', models.TimeField(blank=True, null=True)),
                ('time_end', models.TimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=0)),
            ],
            options={
                'db_table': 'assessment_sessions',
            },
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=200, null=True)),
                ('is_active', models.BooleanField(default=1)),
                ('is_answer', models.BooleanField(default=0)),
                ('is_import', models.BooleanField(default=0)),
                ('follow_up_required', models.BooleanField(default=0)),
                ('required_document_image', models.BooleanField(default=0)),
            ],
            options={
                'db_table': 'choices',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('is_active', models.BooleanField(default=1)),
            ],
            options={
                'db_table': 'company',
            },
        ),
        migrations.CreateModel(
            name='Company_assessment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_from', models.DateField(blank=True, null=True)),
                ('date_to', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=1)),
                ('transaction_type', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(verbose_name=b'Transaction_type'), blank=True, null=True, size=None)),
                ('is_synced', models.BooleanField(default=0)),
                ('is_complete', models.BooleanField(default=0)),
                ('reference_no', models.CharField(blank=True, max_length=200, null=True, unique=True)),
                ('is_generated', models.BooleanField(default=0)),
                ('session_credits', models.DurationField(blank=True, null=True)),
                ('credits_left', models.DurationField(blank=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='systech_account.Company')),
            ],
            options={
                'db_table': 'company_assessment',
            },
        ),
        migrations.CreateModel(
            name='Company_rename',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('is_active', models.BooleanField(default=1)),
                ('transaction_type', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(verbose_name=b'Transaction_type'), blank=True, null=True, size=None)),
                ('is_intelex', models.BooleanField(default=0)),
                ('program_id', models.IntegerField(blank=True, null=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='systech_account.Company')),
            ],
            options={
                'db_table': 'company_rename',
            },
        ),
        migrations.CreateModel(
            name='Display_setting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_assessments', models.CharField(blank=True, max_length=200, null=True)),
                ('transaction_types', models.CharField(blank=True, max_length=200, null=True)),
                ('questions', models.CharField(blank=True, max_length=200, null=True)),
                ('company_rename', models.CharField(blank=True, max_length=200, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='systech_account.Company')),
            ],
            options={
                'db_table': 'display_settings',
            },
        ),
        migrations.CreateModel(
            name='Generated_assessment_recommendation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recommendations', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(verbose_name=b'Assessment_recommendation'), blank=True, null=True, size=None)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='systech_account.Company')),
                ('company_assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='systech_account.Company_assessment')),
            ],
            options={
                'db_table': 'generated_assessment_recommendations',
            },
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'record',
            },
        ),
        migrations.CreateModel(
            name='Related_question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('related_questions', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(verbose_name=b'Assessment_question'), blank=True, null=True, size=None)),
                ('is_active', models.BooleanField(default=1)),
                ('is_import', models.BooleanField(default=0)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='systech_account.Company')),
            ],
            options={
                'db_table': 'related_questions',
            },
        ),
        migrations.CreateModel(
            name='Transaction_type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('transaction_code', models.CharField(blank=True, max_length=200, null=True)),
                ('exercise_id', models.IntegerField(blank=True, null=True)),
                ('program_id', models.IntegerField(blank=True, null=True)),
                ('set_no', models.IntegerField(blank=True, null=True)),
                ('total_items', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=1)),
                ('is_intelex', models.BooleanField(default=0)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='systech_account.Company')),
            ],
            options={
                'db_table': 'transaction_types',
            },
        ),
        migrations.CreateModel(
            name='User_credit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment_id', models.IntegerField(blank=True, null=True)),
                ('session_credits', models.DurationField(blank=True, null=True)),
                ('session_start_date', models.DateField(blank=True, null=True)),
                ('session_end_date', models.DateField(blank=True, null=True)),
                ('program_id', models.IntegerField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_credits',
            },
        ),
        migrations.CreateModel(
            name='User_type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('is_active', models.BooleanField(default=1)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='systech_account.Company')),
            ],
            options={
                'db_table': 'user_type',
            },
        ),
        migrations.AddField(
            model_name='company_assessment',
            name='company_rename',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='systech_account.Company_rename'),
        ),
        migrations.AddField(
            model_name='company_assessment',
            name='consultant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='choice',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='systech_account.Company'),
        ),
        migrations.AddField(
            model_name='choice',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='systech_account.Assessment_question'),
        ),
        migrations.AddField(
            model_name='assessment_session',
            name='company_assessment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='systech_account.Company_assessment'),
        ),
        migrations.AddField(
            model_name='assessment_score',
            name='company_assessment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='systech_account.Company_assessment'),
        ),
        migrations.AddField(
            model_name='assessment_score',
            name='transaction_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='systech_account.Transaction_type'),
        ),
        migrations.AddField(
            model_name='assessment_recommendation',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='systech_account.Company'),
        ),
        migrations.AddField(
            model_name='assessment_question',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='systech_account.Company'),
        ),
        migrations.AddField(
            model_name='assessment_question',
            name='parent_question',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='systech_account.Assessment_question'),
        ),
        migrations.AddField(
            model_name='assessment_question',
            name='transaction_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='systech_account.Transaction_type'),
        ),
        migrations.AddField(
            model_name='assessment_finding',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='systech_account.Company'),
        ),
        migrations.AddField(
            model_name='assessment_finding',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='systech_account.Assessment_question'),
        ),
        migrations.AddField(
            model_name='assessment_effect',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='systech_account.Company'),
        ),
        migrations.AddField(
            model_name='assessment_effect',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='systech_account.Assessment_question'),
        ),
        migrations.AddField(
            model_name='assessment_answer',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='systech_account.Company'),
        ),
        migrations.AddField(
            model_name='assessment_answer',
            name='company_assessment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='systech_account.Company_assessment'),
        ),
        migrations.AddField(
            model_name='assessment_answer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='systech_account.Assessment_question'),
        ),
        migrations.AddField(
            model_name='assessment_answer',
            name='transaction_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='systech_account.Transaction_type'),
        ),
        migrations.AddField(
            model_name='user',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='systech_account.Company'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='systech_account.User_type'),
        ),
    ]
