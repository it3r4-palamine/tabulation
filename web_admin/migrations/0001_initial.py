# Generated by Django 2.1 on 2019-03-13 02:12

from django.conf import settings
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import imagekit.models.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('fullname', models.CharField(blank=True, max_length=100, null=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=1)),
                ('is_edit', models.BooleanField(default=False)),
                ('is_intelex', models.BooleanField(default=False)),
                ('user_intelex_id', models.IntegerField(blank=True, null=True)),
                ('username', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=200, null=True)),
                ('last_name', models.CharField(blank=True, max_length=200, null=True)),
                ('nick_name', models.CharField(blank=True, max_length=200, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, max_length=50, null=True)),
                ('nationality', models.CharField(blank=True, max_length=50, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('contact_number', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('fathers_name', models.CharField(blank=True, max_length=200, null=True)),
                ('mothers_name', models.CharField(blank=True, max_length=200, null=True)),
                ('fathers_contact_no', models.CharField(blank=True, max_length=200, null=True)),
                ('mothers_contact_no', models.CharField(blank=True, max_length=200, null=True)),
                ('guardian_name', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('rfid', models.CharField(blank=True, max_length=20, null=True)),
                ('is_student', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'User',
            },
        ),
        migrations.CreateModel(
            name='Assessment_answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(verbose_name='Choice'), blank=True, null=True, size=None)),
                ('text_answer', models.CharField(blank=True, max_length=200, null=True)),
                ('document_image', imagekit.models.fields.ProcessedImageField(blank=True, null=True, upload_to='assessment/document_images/')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('is_deleted', models.BooleanField(default=0)),
                ('uploaded_question', models.BooleanField(default=0)),
            ],
            options={
                'db_table': 'assessment_answers',
            },
        ),
        migrations.CreateModel(
            name='Assessment_answer_image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', imagekit.models.fields.ProcessedImageField(blank=True, null=True, upload_to='assessment/document_images/')),
                ('item_no', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=1)),
                ('is_sync', models.BooleanField(default=1)),
            ],
            options={
                'db_table': 'assessment_answer_images',
            },
        ),
        migrations.CreateModel(
            name='Assessment_effect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=200, null=True)),
                ('is_active', models.BooleanField(default=1)),
                ('is_import', models.BooleanField(default=0)),
            ],
            options={
                'db_table': 'assessment_effects',
            },
        ),
        migrations.CreateModel(
            name='Assessment_finding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=200, null=True)),
                ('is_active', models.BooleanField(default=1)),
                ('is_import', models.BooleanField(default=0)),
            ],
            options={
                'db_table': 'assessment_findings',
            },
        ),
        migrations.CreateModel(
            name='Assessment_image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=1)),
                ('image', imagekit.models.fields.ProcessedImageField(blank=True, null=True, upload_to='assessment/questions/')),
                ('order', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'assessment_images',
            },
        ),
        migrations.CreateModel(
            name='Assessment_image_answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=1)),
                ('item_no', models.IntegerField(blank=True, null=True)),
                ('answer', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'assessment_image_answers',
            },
        ),
        migrations.CreateModel(
            name='Assessment_question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=200, null=True)),
                ('is_active', models.BooleanField(default=1)),
                ('is_multiple', models.BooleanField(default=0)),
                ('is_document', models.BooleanField(default=0)),
                ('has_follow_up', models.BooleanField(default=0)),
                ('code', models.CharField(blank=True, max_length=200, null=True)),
                ('is_import', models.BooleanField(default=0)),
                ('has_multiple_answer', models.BooleanField(default=0)),
                ('is_general', models.BooleanField(default=0)),
                ('transaction_types', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(verbose_name='Transaction_type'), blank=True, null=True, size=None)),
                ('answer_type', models.CharField(blank=True, max_length=200, null=True)),
                ('has_related', models.BooleanField(default=0)),
                ('uploaded_question', models.BooleanField(default=0)),
                ('timer', models.DurationField(blank=True, null=True)),
            ],
            options={
                'db_table': 'assessment_questions',
            },
        ),
        migrations.CreateModel(
            name='Assessment_recommendation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=200, null=True)),
                ('is_active', models.BooleanField(default=1)),
                ('is_import', models.BooleanField(default=0)),
            ],
            options={
                'db_table': 'assessment_recommendations',
            },
        ),
        migrations.CreateModel(
            name='Assessment_score',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=1)),
                ('score', models.IntegerField(blank=True, null=True)),
                ('uploaded_question', models.BooleanField(default=0)),
            ],
            options={
                'db_table': 'assessment_scores',
            },
        ),
        migrations.CreateModel(
            name='Assessment_session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('time_start', models.TimeField(blank=True, null=True)),
                ('time_end', models.TimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=0)),
            ],
            options={
                'db_table': 'assessment_sessions',
            },
        ),
        migrations.CreateModel(
            name='Assessment_upload_answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=1)),
                ('item_no', models.IntegerField(blank=True, null=True)),
                ('answer', models.CharField(blank=True, max_length=200, null=True)),
                ('answer_syntax', models.CharField(blank=True, max_length=200, null=True)),
                ('is_deleted', models.BooleanField(default=0)),
            ],
            options={
                'db_table': 'assessment_upload_answers',
            },
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=200, null=True)),
                ('is_active', models.BooleanField(default=1)),
                ('is_answer', models.BooleanField(default=0)),
                ('is_import', models.BooleanField(default=0)),
                ('follow_up_required', models.BooleanField(default=0)),
                ('required_document_image', models.BooleanField(default=0)),
            ],
            options={
                'db_table': 'choices',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('is_active', models.BooleanField(default=1)),
                ('is_intelex', models.BooleanField(default=0)),
            ],
            options={
                'db_table': 'company',
            },
        ),
        migrations.CreateModel(
            name='Company_assessment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_from', models.DateField(blank=True, null=True)),
                ('date_to', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=1)),
                ('transaction_type', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(verbose_name='Transaction_type'), blank=True, null=True, size=None)),
                ('is_synced', models.BooleanField(default=0)),
                ('is_complete', models.BooleanField(default=0)),
                ('is_expired', models.BooleanField(default=0)),
                ('reference_no', models.CharField(blank=True, max_length=200, null=True, unique=True)),
                ('is_generated', models.BooleanField(default=0)),
                ('session_credits', models.DurationField(blank=True, null=True)),
                ('credits_left', models.DurationField(blank=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web_admin.Company')),
            ],
            options={
                'db_table': 'company_assessment',
            },
        ),
        migrations.CreateModel(
            name='Company_rename',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('is_active', models.BooleanField(default=1)),
                ('transaction_type', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(verbose_name='Transaction_type'), blank=True, null=True, size=None)),
                ('is_intelex', models.BooleanField(default=0)),
                ('program_id', models.IntegerField(blank=True, null=True)),
                ('rate', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('hours', models.DurationField(blank=True, null=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web_admin.Company')),
            ],
            options={
                'db_table': 'company_rename',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(max_length=250)),
                ('description', models.CharField(blank=True, max_length=250, null=True)),
                ('date_created', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('date_edited', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('is_global', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=7, null=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web_admin.Company')),
            ],
            options={
                'db_table': 'course',
            },
        ),
        migrations.CreateModel(
            name='Display_setting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_assessments', models.CharField(blank=True, max_length=200, null=True)),
                ('transaction_types', models.CharField(blank=True, max_length=200, null=True)),
                ('questions', models.CharField(blank=True, max_length=200, null=True)),
                ('company_rename', models.CharField(blank=True, max_length=200, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web_admin.Company')),
            ],
            options={
                'db_table': 'display_settings',
            },
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('session_credits', models.DurationField(blank=True, null=True)),
                ('session_start_date', models.DateField(blank=True, null=True)),
                ('session_end_date', models.DateField(blank=True, null=True)),
                ('enrollment_date', models.DateField(blank=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web_admin.Company')),
                ('company_rename', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web_admin.Company_rename')),
            ],
            options={
                'db_table': 'enrollments',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='EnrollmentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('code', models.CharField(blank=True, max_length=50, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web_admin.Company')),
            ],
            options={
                'db_table': 'enrollment_types',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Generated_assessment_recommendation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recommendations', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(verbose_name='Assessment_recommendation'), blank=True, null=True, size=None)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web_admin.Company')),
                ('company_assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web_admin.Company_assessment')),
            ],
            options={
                'db_table': 'generated_assessment_recommendations',
            },
        ),
        migrations.CreateModel(
            name='GradeLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web_admin.Company')),
            ],
            options={
                'db_table': 'grade_level',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Lesson_update_detail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lesson_update_detail',
            },
        ),
        migrations.CreateModel(
            name='Lesson_update_header',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=1)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lesson_update_header',
            },
        ),
        migrations.CreateModel(
            name='Math_symbol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.TextField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=1)),
                ('category', models.TextField(blank=True, null=True)),
                ('above_text', models.BooleanField(default=0)),
                ('syntax', models.TextField(blank=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web_admin.Company')),
            ],
            options={
                'db_table': 'math_symbols',
            },
        ),
        migrations.CreateModel(
            name='Multiple_image_answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('is_active', models.BooleanField(default=1)),
                ('image_answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web_admin.Assessment_image_answer')),
            ],
            options={
                'db_table': 'multiple_image_answers',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_paid', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('official_receipt_no', models.CharField(blank=True, max_length=15, null=True)),
                ('enrollment_form_no', models.CharField(blank=True, max_length=15, null=True)),
                ('payment_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('created_on', models.DateField(default=django.utils.timezone.now)),
                ('is_deleted', models.BooleanField(default=False)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web_admin.Company')),
                ('enrollment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web_admin.Enrollment')),
            ],
            options={
                'db_table': 'payments',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='PaymentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web_admin.Company')),
            ],
            options={
                'db_table': 'payment_types',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(max_length=250)),
                ('description', models.CharField(blank=True, max_length=250, null=True)),
                ('date_created', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('date_edited', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('is_global', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=7, null=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web_admin.Company')),
            ],
            options={
                'db_table': 'program',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(max_length=250)),
                ('description', models.CharField(blank=True, max_length=250, null=True)),
                ('date_created', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('date_edited', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('is_global', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web_admin.Company')),
            ],
            options={
                'db_table': 'questions',
            },
        ),
        migrations.CreateModel(
            name='QuestionChoices',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(max_length=250)),
                ('description', models.CharField(blank=True, max_length=250, null=True)),
                ('date_created', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('date_edited', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('is_global', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_correct', models.BooleanField(default=False)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web_admin.Company')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web_admin.Question')),
            ],
            options={
                'db_table': 'question_choices',
            },
        ),
        migrations.CreateModel(
            name='QuestionType',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(max_length=250)),
                ('description', models.CharField(blank=True, max_length=250, null=True)),
                ('date_created', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('date_edited', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('is_global', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web_admin.Company')),
            ],
            options={
                'db_table': 'question_type',
            },
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'record',
            },
        ),
        migrations.CreateModel(
            name='Related_question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('related_questions', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(verbose_name='Assessment_question'), blank=True, null=True, size=None)),
                ('is_active', models.BooleanField(default=1)),
                ('is_import', models.BooleanField(default=0)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web_admin.Company')),
            ],
            options={
                'db_table': 'related_questions',
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('address', models.TextField()),
                ('contact_person', models.CharField(blank=True, max_length=200, null=True)),
                ('contact_number', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web_admin.Company')),
            ],
            options={
                'db_table': 'school',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='SessionExercise',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'session_exercise',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='StudentAnswer',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(max_length=250)),
                ('description', models.CharField(blank=True, max_length=250, null=True)),
                ('date_created', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('date_edited', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('is_global', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web_admin.QuestionChoices')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web_admin.Company')),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web_admin.SessionExercise')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web_admin.Question')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'student_answers',
            },
        ),
        migrations.CreateModel(
            name='StudentSession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=100, null=True)),
                ('session_date', models.DateField(default=django.utils.timezone.now)),
                ('session_timein', models.TimeField(blank=True, default=None, null=True)),
                ('session_timeout', models.TimeField(blank=True, default=None, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('enrollment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='enrollment', to='web_admin.Enrollment')),
                ('evaluated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='evaluated_by', to=settings.AUTH_USER_MODEL)),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web_admin.Company_rename')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'student_session',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(max_length=250)),
                ('description', models.CharField(blank=True, max_length=250, null=True)),
                ('date_created', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('date_edited', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('is_global', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web_admin.Company')),
            ],
            options={
                'db_table': 'subjects',
            },
        ),
        migrations.CreateModel(
            name='TimeSlot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('time_start', models.TimeField(blank=True, default=None, null=True)),
                ('time_end', models.TimeField(blank=True, default=None, null=True)),
                ('has_sunday', models.BooleanField(default=False)),
                ('has_monday', models.BooleanField(default=False)),
                ('has_tuesday', models.BooleanField(default=False)),
                ('has_wednesday', models.BooleanField(default=False)),
                ('has_thursday', models.BooleanField(default=False)),
                ('has_friday', models.BooleanField(default=False)),
                ('has_saturday', models.BooleanField(default=False)),
                ('date_start', models.DateField(blank=True, null=True)),
                ('date_end', models.DateField(blank=True, null=True)),
                ('is_current', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'timeslots',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='To_dos_topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=1)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web_admin.Company')),
            ],
            options={
                'db_table': 'to_dos_topics',
            },
        ),
        migrations.CreateModel(
            name='TrainerNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('code', models.CharField(blank=True, max_length=100, null=True)),
                ('score_min', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('score_max', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'trainer_note',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Transaction_type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('transaction_code', models.CharField(blank=True, max_length=200, null=True)),
                ('exercise_id', models.IntegerField(blank=True, null=True)),
                ('program_id', models.IntegerField(blank=True, null=True)),
                ('set_no', models.IntegerField(blank=True, null=True)),
                ('total_items', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=1)),
                ('is_intelex', models.BooleanField(default=0)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web_admin.Company')),
            ],
            options={
                'db_table': 'transaction_types',
            },
        ),
        migrations.CreateModel(
            name='UserCredit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment_id', models.IntegerField(blank=True, null=True)),
                ('enrollment_code', models.CharField(blank=True, max_length=200, null=True)),
                ('session_credits', models.DurationField(blank=True, null=True)),
                ('session_credits_left', models.DurationField(blank=True, null=True)),
                ('session_start_date', models.DateField(blank=True, null=True)),
                ('session_end_date', models.DateField(blank=True, null=True)),
                ('program_id', models.IntegerField(blank=True, null=True)),
                ('program_name', models.CharField(blank=True, max_length=200, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_credits',
            },
        ),
        migrations.CreateModel(
            name='UserLogs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_login', models.DateField(default=django.utils.timezone.now)),
                ('device', models.CharField(blank=True, max_length=100, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_logs',
            },
        ),
        migrations.CreateModel(
            name='UserTimeLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_type', models.CharField(blank=True, max_length=20, null=True)),
                ('log_time', models.TimeField(blank=True, default=None, null=True)),
                ('log_date', models.DateField(default=django.utils.timezone.now)),
                ('sync_id', models.CharField(blank=True, max_length=50, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_time_logs',
            },
        ),
        migrations.CreateModel(
            name='UserType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('is_active', models.BooleanField(default=1)),
                ('is_default', models.BooleanField(default=0)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web_admin.Company')),
            ],
            options={
                'db_table': 'user_type',
            },
        ),
        migrations.AddField(
            model_name='sessionexercise',
            name='exercise',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web_admin.Transaction_type'),
        ),
        migrations.AddField(
            model_name='sessionexercise',
            name='facilitated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='sessionexercise',
            name='session',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_session', to='web_admin.StudentSession'),
        ),
        migrations.AddField(
            model_name='sessionexercise',
            name='trainer_note',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web_admin.TrainerNote'),
        ),
        migrations.AddField(
            model_name='question',
            name='question_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web_admin.QuestionType'),
        ),
        migrations.AddField(
            model_name='question',
            name='subject',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web_admin.Subject'),
        ),
        migrations.AddField(
            model_name='payment',
            name='payment_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web_admin.PaymentType'),
        ),
        migrations.AddField(
            model_name='lesson_update_detail',
            name='lesson_update_header',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web_admin.Lesson_update_header'),
        ),
        migrations.AddField(
            model_name='lesson_update_detail',
            name='to_dos_topic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web_admin.To_dos_topic'),
        ),
        migrations.AddField(
            model_name='enrollment',
            name='enrollment_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web_admin.EnrollmentType'),
        ),
        migrations.AddField(
            model_name='enrollment',
            name='school',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='school_enrolled', to='web_admin.School'),
        ),
        migrations.AddField(
            model_name='enrollment',
            name='timeslot',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web_admin.TimeSlot'),
        ),
        migrations.AddField(
            model_name='enrollment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='company_assessment',
            name='company_rename',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web_admin.Company_rename'),
        ),
        migrations.AddField(
            model_name='company_assessment',
            name='consultant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='consultant', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='company_assessment',
            name='facilitator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='facilitator', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='choice',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web_admin.Company'),
        ),
        migrations.AddField(
            model_name='choice',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web_admin.Assessment_question'),
        ),
        migrations.AddField(
            model_name='assessment_upload_answer',
            name='company_assessment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web_admin.Company_assessment'),
        ),
        migrations.AddField(
            model_name='assessment_upload_answer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web_admin.Assessment_question'),
        ),
        migrations.AddField(
            model_name='assessment_upload_answer',
            name='transaction_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web_admin.Transaction_type'),
        ),
        migrations.AddField(
            model_name='assessment_session',
            name='company_assessment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web_admin.Company_assessment'),
        ),
        migrations.AddField(
            model_name='assessment_session',
            name='question',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web_admin.Assessment_question'),
        ),
        migrations.AddField(
            model_name='assessment_session',
            name='transaction_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web_admin.Transaction_type'),
        ),
        migrations.AddField(
            model_name='assessment_score',
            name='company_assessment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web_admin.Company_assessment'),
        ),
        migrations.AddField(
            model_name='assessment_score',
            name='question',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web_admin.Assessment_question'),
        ),
        migrations.AddField(
            model_name='assessment_score',
            name='transaction_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web_admin.Transaction_type'),
        ),
        migrations.AddField(
            model_name='assessment_recommendation',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web_admin.Company'),
        ),
        migrations.AddField(
            model_name='assessment_question',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web_admin.Company'),
        ),
        migrations.AddField(
            model_name='assessment_question',
            name='parent_question',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web_admin.Assessment_question'),
        ),
        migrations.AddField(
            model_name='assessment_question',
            name='transaction_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web_admin.Transaction_type'),
        ),
        migrations.AddField(
            model_name='assessment_image_answer',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web_admin.Company'),
        ),
        migrations.AddField(
            model_name='assessment_image_answer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web_admin.Assessment_question'),
        ),
        migrations.AddField(
            model_name='assessment_image',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web_admin.Company'),
        ),
        migrations.AddField(
            model_name='assessment_image',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web_admin.Assessment_question'),
        ),
        migrations.AddField(
            model_name='assessment_finding',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web_admin.Company'),
        ),
        migrations.AddField(
            model_name='assessment_finding',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web_admin.Assessment_question'),
        ),
        migrations.AddField(
            model_name='assessment_effect',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web_admin.Company'),
        ),
        migrations.AddField(
            model_name='assessment_effect',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web_admin.Assessment_question'),
        ),
        migrations.AddField(
            model_name='assessment_answer_image',
            name='company_assessment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web_admin.Company_assessment'),
        ),
        migrations.AddField(
            model_name='assessment_answer_image',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web_admin.Assessment_question'),
        ),
        migrations.AddField(
            model_name='assessment_answer_image',
            name='transaction_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web_admin.Transaction_type'),
        ),
        migrations.AddField(
            model_name='assessment_answer',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web_admin.Company'),
        ),
        migrations.AddField(
            model_name='assessment_answer',
            name='company_assessment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web_admin.Company_assessment'),
        ),
        migrations.AddField(
            model_name='assessment_answer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web_admin.Assessment_question'),
        ),
        migrations.AddField(
            model_name='assessment_answer',
            name='transaction_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web_admin.Transaction_type'),
        ),
        migrations.AddField(
            model_name='user',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web_admin.Company'),
        ),
        migrations.AddField(
            model_name='user',
            name='grade_level',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web_admin.GradeLevel'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='school',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web_admin.School'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web_admin.UserType'),
        ),
    ]
